# data/effect_mark.yaml
# yaml-language-server: $schema=../packages/schema/schema/effect.schema.json
# @metaType effect
# @version 1.0.0
- id: effect_stun
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: stun
    target: usingSkillContext
- id: effect_cant_evasion
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 1
- id: effect_40probability_stun
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: raw:number
            value: 40
  apply:
    type: stun
    target: usingSkillContext
- id: effect_onDamage_recovery
  trigger: PostDamage
  priority: 0
  condition:
    type: selfDamage
  apply:
    type: destroyMark
    target:
      base: mark
- id: effect_onCritDamage_recovery
  trigger: OnCritPostDamage
  priority: 0
  condition:
    type: selfDamage
  apply:
    type: destroyMark
    target:
      base: mark
- id: effect_randomUseSkill
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setSkill
    target: usingSkillContext
    value:
      type: dynamic
      selector:
        base: selfAvailableSkills
        chain:
          - type: shuffled
          - type: limit
            arg:
              type: raw:number
              value: 1
- id: effect_onDamage_over100_recovery
  trigger: PostDamage
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfDamage
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: value
        evaluator:
          type: compare
          operator: '>='
          value:
            type: raw:number
            value: 100
  apply:
    type: destroyMark
    target:
      base: mark
- id: effect_curse_add_random_status
  trigger: OnMarkDestroy
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: dynamic
      selector:
        base: dataMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: tags
            evaluator:
              type: hasTag
              tag: status
          - type: shuffled
          - type: limit
            arg:
              type: raw:number
              value: 1
- id: effect_prevent_damage
  trigger: OnDamage
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: preventDamage
    target: damageContext
- id: effect_confuse
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setActualTarget
    target: usingSkillContext
    newTarget:
      type: dynamic
      selector: self
- id: effect_taunt
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: not
        condition:
          type: evaluate
          target:
            base: usingSkillContext
            chain:
              - type: selectPath
                arg: category
          evaluator:
            type: same
            value:
              type: raw:string
              value: Status
  apply:
    type: stun
    target: usingSkillContext
- id: effect_physical_stun
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: same
          value:
            type: raw:string
            value: Physical
  apply:
    type: stun
    target: usingSkillContext
