{
  "CompareOperator": [
    {
      "n": "type",
      "t": "\">\" | \"<\" | \">=\" | \"<=\" | \"==\"",
      "iu": true,
      "u": [
        "\">\"",
        "\"<\"",
        "\">=\"",
        "\"<=\"",
        "\"==\""
      ],
      "a": false
    }
  ],
  "ValueExtractor": [],
  "Action": [],
  "Condition": [],
  "Evaluator": [],
  "Operator": [],
  "TargetSelector": [],
  "ValueSource": [
    {
      "n": "type",
      "t": "T | TargetSelector<T> | ChainableSelector<T>",
      "iu": true,
      "u": [
        "T",
        "TargetSelector<T>",
        "ChainableSelector<T>"
      ],
      "a": false
    }
  ],
  "WidenLiteral": [],
  "ExtractorMap": [
    {
      "n": "hp",
      "t": "(target: Pet) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "maxhp",
      "t": "(target: Pet) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rage",
      "t": "(target: Player) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "owner",
      "t": "(target: OwnedEntity<CanOwnedEntity>) => Pet | Player | Battle | MarkInstance | SkillInstance | null",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "type",
      "t": "(target: Pet) => Element",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "marks",
      "t": "(target: Pet) => MarkInstance",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "(target: Pet) => MarkInstance"
    },
    {
      "n": "stats",
      "t": "(target: Pet) => StatOnBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stack",
      "t": "(target: MarkInstance) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "duration",
      "t": "(target: MarkInstance) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "power",
      "t": "(target: UseSkillContext) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "priority",
      "t": "(target: UseSkillContext) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "activePet",
      "t": "(target: Player) => Pet",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "skills",
      "t": "(target: Pet) => SkillInstance",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "(target: Pet) => SkillInstance"
    },
    {
      "n": "id",
      "t": "(target: Instance) => InstanceId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseId",
      "t": "(target: Instance) => PrototypeId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "tags",
      "t": "(mark: MarkInstance) => string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "(mark: MarkInstance) => string"
    }
  ],
  "Path": [],
  "RuntimeTypeChecker": [
    {
      "n": "metadata",
      "t": "TypeMetadata",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "TypeMetadata": [],
  "ChainableSelector": [],
  "PropertyRef": [
    {
      "n": "get",
      "t": "() => V",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "set",
      "t": "(value: V) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "T",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PrimitiveOpinion": [
    {
      "n": "type",
      "t": "string | number | false | true",
      "iu": true,
      "u": [
        "string",
        "number",
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "EnumOpinion": [
    {
      "n": "type",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing | Gender.NoGender | Gender.Male | Gender.Female | Nature.Hardy | Nature.Lonely | Nature.Brave | Nature.Adamant | Nature.Naughty | Nature.Bold | Nature.Docile | Nature.Relaxed | Nature.Impish | Nature.Lax | Nature.Timid | Nature.Hasty | Nature.Serious | Nature.Jolly | Nature.Naive | Nature.Modest | Nature.Mild | Nature.Quiet | Nature.Bashful | Nature.Rash | Nature.Calm | Nature.Gentle | Nature.Sassy | Nature.Careful | Nature.Quirky | Category.Physical | Category.Special | Category.Status | Category.Climax | AttackTargetOpinion.self | AttackTargetOpinion.opponent",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing",
        "Gender.NoGender",
        "Gender.Male",
        "Gender.Female",
        "Nature.Hardy",
        "Nature.Lonely",
        "Nature.Brave",
        "Nature.Adamant",
        "Nature.Naughty",
        "Nature.Bold",
        "Nature.Docile",
        "Nature.Relaxed",
        "Nature.Impish",
        "Nature.Lax",
        "Nature.Timid",
        "Nature.Hasty",
        "Nature.Serious",
        "Nature.Jolly",
        "Nature.Naive",
        "Nature.Modest",
        "Nature.Mild",
        "Nature.Quiet",
        "Nature.Bashful",
        "Nature.Rash",
        "Nature.Calm",
        "Nature.Gentle",
        "Nature.Sassy",
        "Nature.Careful",
        "Nature.Quirky",
        "Category.Physical",
        "Category.Special",
        "Category.Status",
        "Category.Climax",
        "AttackTargetOpinion.self",
        "AttackTargetOpinion.opponent"
      ],
      "a": false
    }
  ],
  "ObjectOpinion": [
    {
      "n": "type",
      "t": "null | Pet | Player | Battle | MarkInstance | SkillInstance | StatTypeWithoutHp.atk | StatTypeWithoutHp.def | StatTypeWithoutHp.spa | StatTypeWithoutHp.spd | StatTypeWithoutHp.spe | StatTypeOnlyBattle.accuracy | StatTypeOnlyBattle.evasion | StatTypeOnlyBattle.critRate | StatTypeOnlyBattle.ragePerTurn | StatOnBattle | UseSkillContext | Instance | DamageContext | OwnedEntity<CanOwnedEntity> | Prototype | PropertyRef<any, any>",
      "iu": true,
      "u": [
        "null",
        "Pet",
        "Player",
        "Battle",
        "MarkInstance",
        "SkillInstance",
        "StatTypeWithoutHp.atk",
        "StatTypeWithoutHp.def",
        "StatTypeWithoutHp.spa",
        "StatTypeWithoutHp.spd",
        "StatTypeWithoutHp.spe",
        "StatTypeOnlyBattle.accuracy",
        "StatTypeOnlyBattle.evasion",
        "StatTypeOnlyBattle.critRate",
        "StatTypeOnlyBattle.ragePerTurn",
        "StatOnBattle",
        "UseSkillContext",
        "Instance",
        "DamageContext",
        "OwnedEntity<CanOwnedEntity>",
        "Prototype",
        "PropertyRef<any, any>"
      ],
      "a": false
    }
  ],
  "SelectorOpinion": [
    {
      "n": "type",
      "t": "null | string | number | false | true | Pet | Player | Battle | MarkInstance | SkillInstance | StatOnBattle | UseSkillContext | Instance | DamageContext | OwnedEntity<CanOwnedEntity> | Prototype | PropertyRef<any, any> | SelectorOpinion",
      "iu": true,
      "u": [
        "null",
        "string",
        "number",
        "false",
        "true",
        "Pet",
        "Player",
        "Battle",
        "MarkInstance",
        "SkillInstance",
        "StatOnBattle",
        "UseSkillContext",
        "Instance",
        "DamageContext",
        "OwnedEntity<CanOwnedEntity>",
        "Prototype",
        "PropertyRef<any, any>",
        "SelectorOpinion"
      ],
      "a": false
    }
  ],
  "Battle": [
    {
      "n": "parent",
      "t": "null",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "effectScheduler",
      "t": "EffectScheduler",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rng",
      "t": "default",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "status",
      "t": "BattleStatus.Unstarted | BattleStatus.OnBattle | BattleStatus.Ended",
      "iu": true,
      "u": [
        "BattleStatus.Unstarted",
        "BattleStatus.OnBattle",
        "BattleStatus.Ended"
      ],
      "a": false
    },
    {
      "n": "currentPhase",
      "t": "BattlePhase.SwitchPhase | BattlePhase.SelectionPhase | BattlePhase.ExecutionPhase | BattlePhase.Ended",
      "iu": true,
      "u": [
        "BattlePhase.SwitchPhase",
        "BattlePhase.SelectionPhase",
        "BattlePhase.ExecutionPhase",
        "BattlePhase.Ended"
      ],
      "a": false
    },
    {
      "n": "currentTurn",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "messageCallbacks",
      "t": "((message: BattleMessage) => void)",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "((message: BattleMessage) => void)"
    },
    {
      "n": "pendingDefeatedPlayers",
      "t": "Player",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Player"
    },
    {
      "n": "allowFaintSwitch",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "lastKiller",
      "t": "undefined | Player",
      "iu": true,
      "u": [
        "undefined",
        "Player"
      ],
      "a": false
    },
    {
      "n": "marks",
      "t": "MarkInstance",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "MarkInstance"
    },
    {
      "n": "victor",
      "t": "undefined | Player",
      "iu": true,
      "u": [
        "undefined",
        "Player"
      ],
      "a": false
    },
    {
      "n": "petMap",
      "t": "Map<string, Pet>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "skillMap",
      "t": "Map<string, SkillInstance>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "playerA",
      "t": "Player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "playerB",
      "t": "Player",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "Context": [
    {
      "n": "type",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "undefined | Battle",
      "iu": true,
      "u": [
        "undefined",
        "Battle"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "null | Battle | UseSkillContext | DamageContext | TurnContext | HealContext | AddMarkContext | RemoveMarkContext | SwitchPetContext | RageContext | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "null",
        "Battle",
        "UseSkillContext",
        "DamageContext",
        "TurnContext",
        "HealContext",
        "AddMarkContext",
        "RemoveMarkContext",
        "SwitchPetContext",
        "RageContext",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    }
  ],
  "TurnContext": [
    {
      "n": "type",
      "t": "\"turn\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "parent",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "UseSkillContext": [
    {
      "n": "type",
      "t": "\"use-skill\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "skillPriority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "power",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rageCost",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "actualTarget",
      "t": "undefined | Pet",
      "iu": true,
      "u": [
        "undefined",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "damageModified",
      "t": "[number, number]",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "damageResult",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "minThreshold",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "maxThreshold",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "crit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "sureHit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "multihit",
      "t": "number | [number, number]",
      "iu": true,
      "u": [
        "number",
        "[number, number]"
      ],
      "a": false
    },
    {
      "n": "multihitResult",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ignoreShield",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "TurnContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "origin",
      "t": "Player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "pet",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "selectTarget",
      "t": "AttackTargetOpinion.self | AttackTargetOpinion.opponent",
      "iu": true,
      "u": [
        "AttackTargetOpinion.self",
        "AttackTargetOpinion.opponent"
      ],
      "a": false
    },
    {
      "n": "skill",
      "t": "SkillInstance",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "SwitchPetContext": [
    {
      "n": "type",
      "t": "\"switch-pet\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "parent",
      "t": "Battle | TurnContext",
      "iu": true,
      "u": [
        "Battle",
        "TurnContext"
      ],
      "a": false
    },
    {
      "n": "origin",
      "t": "Player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "RageContext": [
    {
      "n": "type",
      "t": "\"rage-cost\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "UseSkillContext | TurnContext | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "UseSkillContext",
        "TurnContext",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    },
    {
      "n": "target",
      "t": "Player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "reason",
      "t": "\"turn\" | \"damage\" | \"skill\" | \"skillHit\" | \"switch\" | \"effect\"",
      "iu": true,
      "u": [
        "\"turn\"",
        "\"damage\"",
        "\"skill\"",
        "\"skillHit\"",
        "\"switch\"",
        "\"effect\""
      ],
      "a": false
    },
    {
      "n": "modifiedType",
      "t": "\"setting\" | \"add\" | \"reduce\"",
      "iu": true,
      "u": [
        "\"setting\"",
        "\"add\"",
        "\"reduce\""
      ],
      "a": false
    },
    {
      "n": "value",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ignoreRageObtainEfficiency",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "DamageContext": [
    {
      "n": "type",
      "t": "\"damage\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "UseSkillContext | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "UseSkillContext",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    },
    {
      "n": "source",
      "t": "Pet | MarkInstance | SkillInstance",
      "iu": true,
      "u": [
        "Pet",
        "MarkInstance",
        "SkillInstance"
      ],
      "a": false
    },
    {
      "n": "value",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "damageType",
      "t": "DamageType.physical | DamageType.special | DamageType.effect",
      "iu": true,
      "u": [
        "DamageType.physical",
        "DamageType.special",
        "DamageType.effect"
      ],
      "a": false
    },
    {
      "n": "crit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "effectiveness",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ignoreShield",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "HealContext": [
    {
      "n": "type",
      "t": "\"heal\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "EffectContext<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "source",
      "t": "MarkInstance | SkillInstance",
      "iu": true,
      "u": [
        "MarkInstance",
        "SkillInstance"
      ],
      "a": false
    },
    {
      "n": "value",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ingoreEffect",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "AddMarkContext": [
    {
      "n": "type",
      "t": "\"add-mark\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "SwitchPetContext | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "SwitchPetContext",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    },
    {
      "n": "target",
      "t": "MarkOwner",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "mark",
      "t": "BaseMark",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stack",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    }
  ],
  "RemoveMarkContext": [
    {
      "n": "type",
      "t": "\"remove-mark\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "EffectContext<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "mark",
      "t": "MarkInstance",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "EffectContext": [
    {
      "n": "type",
      "t": "\"effect\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "TriggerContextMap[T]",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "trigger",
      "t": "T",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "source",
      "t": "MarkInstance | SkillInstance",
      "iu": true,
      "u": [
        "MarkInstance",
        "SkillInstance"
      ],
      "a": false
    }
  ],
  "AllContext": [
    {
      "n": "type",
      "t": "Battle | UseSkillContext | DamageContext | TurnContext | HealContext | AddMarkContext | RemoveMarkContext | SwitchPetContext | RageContext | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "Battle",
        "UseSkillContext",
        "DamageContext",
        "TurnContext",
        "HealContext",
        "AddMarkContext",
        "RemoveMarkContext",
        "SwitchPetContext",
        "RageContext",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    }
  ],
  "TriggerContextMap": [
    {
      "n": "OnBattleStart",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "BeforeSort",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "BeforeAttack",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "PreDamage",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnCritPreDamage",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnDamage",
      "t": "DamageContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "Shield",
      "t": "DamageContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "PostDamage",
      "t": "DamageContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnCritPostDamage",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnBeforeHit",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnHit",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnMiss",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "AfterAttacked",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnDefeat",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "TurnStart",
      "t": "TurnContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "TurnEnd",
      "t": "TurnContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnAddMark",
      "t": "AddMarkContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnRemoveMark",
      "t": "RemoveMarkContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnMarkCreate",
      "t": "AddMarkContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnMarkDestroy",
      "t": "RemoveMarkContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnMarkDurationEnd",
      "t": "TurnContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnStack",
      "t": "EffectContext<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnHeal",
      "t": "EffectContext<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnRageGain",
      "t": "RageContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnRageLoss",
      "t": "RageContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnSwitchIn",
      "t": "SwitchPetContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnSwitchOut",
      "t": "SwitchPetContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnOwnerSwitchIn",
      "t": "SwitchPetContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnOwnerSwitchOut",
      "t": "SwitchPetContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "BeforeEffect",
      "t": "Battle | UseSkillContext | DamageContext | TurnContext | HealContext | AddMarkContext | RemoveMarkContext | SwitchPetContext | RageContext | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "Battle",
        "UseSkillContext",
        "DamageContext",
        "TurnContext",
        "HealContext",
        "AddMarkContext",
        "RemoveMarkContext",
        "SwitchPetContext",
        "RageContext",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    },
    {
      "n": "AfterEffect",
      "t": "Battle | UseSkillContext | DamageContext | TurnContext | HealContext | AddMarkContext | RemoveMarkContext | SwitchPetContext | RageContext | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "Battle",
        "UseSkillContext",
        "DamageContext",
        "TurnContext",
        "HealContext",
        "AddMarkContext",
        "RemoveMarkContext",
        "SwitchPetContext",
        "RageContext",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    }
  ],
  "EffectScheduler": [
    {
      "n": "globalEffectQueue",
      "t": "{ effect: Effect<EffectTrigger>; context: EffectContext<EffectTrigger>; }",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "{ effect: Effect<EffectTrigger>; context: EffectContext<EffectTrigger>; }"
    }
  ],
  "Effect": [
    {
      "n": "owner",
      "t": "null | MarkInstance | SkillInstance",
      "iu": true,
      "u": [
        "null",
        "MarkInstance",
        "SkillInstance"
      ],
      "a": false
    },
    {
      "n": "id",
      "t": "effectId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "trigger",
      "t": "EffectTrigger.OnBattleStart | EffectTrigger.BeforeSort | EffectTrigger.BeforeAttack | EffectTrigger.PreDamage | EffectTrigger.OnCritPreDamage | EffectTrigger.OnDamage | EffectTrigger.Shield | EffectTrigger.PostDamage | EffectTrigger.OnCritPostDamage | EffectTrigger.OnBeforeHit | EffectTrigger.OnHit | EffectTrigger.OnMiss | EffectTrigger.AfterAttacked | EffectTrigger.OnDefeat | EffectTrigger.TurnStart | EffectTrigger.TurnEnd | EffectTrigger.OnAddMark | EffectTrigger.OnRemoveMark | EffectTrigger.OnMarkCreate | EffectTrigger.OnMarkDestroy | EffectTrigger.OnMarkDurationEnd | EffectTrigger.OnStack | EffectTrigger.OnHeal | EffectTrigger.OnRageGain | EffectTrigger.OnRageLoss | EffectTrigger.OnSwitchIn | EffectTrigger.OnSwitchOut | EffectTrigger.OnOwnerSwitchIn | EffectTrigger.OnOwnerSwitchOut | EffectTrigger.BeforeEffect | EffectTrigger.AfterEffect",
      "iu": true,
      "u": [
        "EffectTrigger.OnBattleStart",
        "EffectTrigger.BeforeSort",
        "EffectTrigger.BeforeAttack",
        "EffectTrigger.PreDamage",
        "EffectTrigger.OnCritPreDamage",
        "EffectTrigger.OnDamage",
        "EffectTrigger.Shield",
        "EffectTrigger.PostDamage",
        "EffectTrigger.OnCritPostDamage",
        "EffectTrigger.OnBeforeHit",
        "EffectTrigger.OnHit",
        "EffectTrigger.OnMiss",
        "EffectTrigger.AfterAttacked",
        "EffectTrigger.OnDefeat",
        "EffectTrigger.TurnStart",
        "EffectTrigger.TurnEnd",
        "EffectTrigger.OnAddMark",
        "EffectTrigger.OnRemoveMark",
        "EffectTrigger.OnMarkCreate",
        "EffectTrigger.OnMarkDestroy",
        "EffectTrigger.OnMarkDurationEnd",
        "EffectTrigger.OnStack",
        "EffectTrigger.OnHeal",
        "EffectTrigger.OnRageGain",
        "EffectTrigger.OnRageLoss",
        "EffectTrigger.OnSwitchIn",
        "EffectTrigger.OnSwitchOut",
        "EffectTrigger.OnOwnerSwitchIn",
        "EffectTrigger.OnOwnerSwitchOut",
        "EffectTrigger.BeforeEffect",
        "EffectTrigger.AfterEffect"
      ],
      "a": false
    },
    {
      "n": "apply",
      "t": "(context: EffectContext<T>) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "condition",
      "t": "undefined | (context: EffectContext<T>) => boolean",
      "iu": true,
      "u": [
        "undefined",
        "(context: EffectContext<T>) => boolean"
      ],
      "a": false
    },
    {
      "n": "consumesStacks",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    }
  ],
  "EffectContainer": [],
  "EffectConfig": [
    {
      "n": "id",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "trigger",
      "t": "T",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "apply",
      "t": "(context: EffectContext<T>) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "condition",
      "t": "undefined | (context: EffectContext<T>) => boolean",
      "iu": true,
      "u": [
        "undefined",
        "(context: EffectContext<T>) => boolean"
      ],
      "a": false
    },
    {
      "n": "consumesStacks",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    }
  ],
  "CanOwnedEntity": [
    {
      "n": "type",
      "t": "null | Pet | Player | Battle | MarkInstance | SkillInstance",
      "iu": true,
      "u": [
        "null",
        "Pet",
        "Player",
        "Battle",
        "MarkInstance",
        "SkillInstance"
      ],
      "a": false
    }
  ],
  "Prototype": [
    {
      "n": "id",
      "t": "speciesId | baseMarkId | baseSkillId | effectId",
      "iu": true,
      "u": [
        "speciesId",
        "baseMarkId",
        "baseSkillId",
        "effectId"
      ],
      "a": false
    }
  ],
  "Instance": [
    {
      "n": "id",
      "t": "petId | skillId | markId",
      "iu": true,
      "u": [
        "petId",
        "skillId",
        "markId"
      ],
      "a": false
    },
    {
      "n": "base",
      "t": "Prototype",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "OwnedEntity": [
    {
      "n": "owner",
      "t": "T",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "MarkOwner": [
    {
      "n": "marks",
      "t": "MarkInstance",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "MarkInstance"
    }
  ],
  "BaseMark": [
    {
      "n": "id",
      "t": "baseMarkId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "effects",
      "t": "Effect<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Effect<EffectTrigger>"
    },
    {
      "n": "config",
      "t": "{ readonly duration?: number | undefined, readonly persistent?: boolean | undefined, readonly maxStacks?: number | undefined, readonly stackable?: boolean | undefined, readonly stackStrategy?: StackStrategy | undefined, readonly destoyable?: boolean | undefined, readonly isShield?: boolean | undefined, readonly keepOnSwitchOut?: boolean | undefined, readonly transferOnSwitch?: boolean | undefined, readonly inheritOnFaint?: boolean | undefined }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "tags",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    }
  ],
  "MarkInstance": [
    {
      "n": "_stack",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "duration",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "owner",
      "t": "null | Pet | Battle",
      "iu": true,
      "u": [
        "null",
        "Pet",
        "Battle"
      ],
      "a": false
    },
    {
      "n": "isActive",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "id",
      "t": "markId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "effects",
      "t": "Effect<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Effect<EffectTrigger>"
    },
    {
      "n": "config",
      "t": "{ duration?: number | undefined, persistent?: boolean | undefined, maxStacks?: number | undefined, stackable?: boolean | undefined, stackStrategy?: StackStrategy | undefined, destoyable?: boolean | undefined, isShield?: boolean | undefined, keepOnSwitchOut?: boolean | undefined, transferOnSwitch?: boolean | undefined, inheritOnFaint?: boolean | undefined }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "tags",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    },
    {
      "n": "base",
      "t": "BaseMark",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stack",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseId",
      "t": "baseMarkId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "isStackable",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "BaseStatLevelMark": [
    {
      "n": "statType",
      "t": "StatTypeWithoutHp.atk | StatTypeWithoutHp.def | StatTypeWithoutHp.spa | StatTypeWithoutHp.spd | StatTypeWithoutHp.spe",
      "iu": true,
      "u": [
        "StatTypeWithoutHp.atk",
        "StatTypeWithoutHp.def",
        "StatTypeWithoutHp.spa",
        "StatTypeWithoutHp.spd",
        "StatTypeWithoutHp.spe"
      ],
      "a": false
    },
    {
      "n": "initialLevel",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "StatLevelMarkInstance": [
    {
      "n": "level",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "base",
      "t": "BaseStatLevelMark",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "statType",
      "t": "StatTypeWithoutHp.atk | StatTypeWithoutHp.def | StatTypeWithoutHp.spa | StatTypeWithoutHp.spd | StatTypeWithoutHp.spe",
      "iu": true,
      "u": [
        "StatTypeWithoutHp.atk",
        "StatTypeWithoutHp.def",
        "StatTypeWithoutHp.spa",
        "StatTypeWithoutHp.spd",
        "StatTypeWithoutHp.spe"
      ],
      "a": false
    }
  ],
  "Pet": [
    {
      "n": "currentHp",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseCritRate",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseAccuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "statStage",
      "t": "StatStage",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "statModifiers",
      "t": "StatBuffOnBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "isAlive",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "lastUseSkill",
      "t": "null | SkillInstance",
      "iu": true,
      "u": [
        "null",
        "SkillInstance"
      ],
      "a": false
    },
    {
      "n": "baseRageObtainEfficiency",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "owner",
      "t": "null | Player",
      "iu": true,
      "u": [
        "null",
        "Player"
      ],
      "a": false
    },
    {
      "n": "marks",
      "t": "MarkInstance",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "MarkInstance"
    },
    {
      "n": "skills",
      "t": "SkillInstance",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "SkillInstance"
    },
    {
      "n": "maxHp",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "base",
      "t": "Species",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "weight",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "height",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "gender",
      "t": "Gender.NoGender | Gender.Male | Gender.Female",
      "iu": true,
      "u": [
        "Gender.NoGender",
        "Gender.Male",
        "Gender.Female"
      ],
      "a": false
    },
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "id",
      "t": "petId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "species",
      "t": "Species",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "level",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "evs",
      "t": "StatOutBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ivs",
      "t": "StatOutBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "nature",
      "t": "Nature.Hardy | Nature.Lonely | Nature.Brave | Nature.Adamant | Nature.Naughty | Nature.Bold | Nature.Docile | Nature.Relaxed | Nature.Impish | Nature.Lax | Nature.Timid | Nature.Hasty | Nature.Serious | Nature.Jolly | Nature.Naive | Nature.Modest | Nature.Mild | Nature.Quiet | Nature.Bashful | Nature.Rash | Nature.Calm | Nature.Gentle | Nature.Sassy | Nature.Careful | Nature.Quirky",
      "iu": true,
      "u": [
        "Nature.Hardy",
        "Nature.Lonely",
        "Nature.Brave",
        "Nature.Adamant",
        "Nature.Naughty",
        "Nature.Bold",
        "Nature.Docile",
        "Nature.Relaxed",
        "Nature.Impish",
        "Nature.Lax",
        "Nature.Timid",
        "Nature.Hasty",
        "Nature.Serious",
        "Nature.Jolly",
        "Nature.Naive",
        "Nature.Modest",
        "Nature.Mild",
        "Nature.Quiet",
        "Nature.Bashful",
        "Nature.Rash",
        "Nature.Calm",
        "Nature.Gentle",
        "Nature.Sassy",
        "Nature.Careful",
        "Nature.Quirky"
      ],
      "a": false
    },
    {
      "n": "stat",
      "t": "StatOnBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "actualStat",
      "t": "StatOnBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "status",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "Species": [
    {
      "n": "id",
      "t": "speciesId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "num",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "baseStats",
      "t": "StatOutBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "genderRatio",
      "t": "null | [number, number]",
      "iu": true,
      "u": [
        "null",
        "[number, number]"
      ],
      "a": false
    },
    {
      "n": "heightRange",
      "t": "[number, number]",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "weightRange",
      "t": "[number, number]",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ability",
      "t": "undefined | BaseMark",
      "iu": true,
      "u": [
        "undefined",
        "BaseMark"
      ],
      "a": false
    },
    {
      "n": "emblem",
      "t": "undefined | BaseMark",
      "iu": true,
      "u": [
        "undefined",
        "BaseMark"
      ],
      "a": false
    }
  ],
  "Player": [
    {
      "n": "currentRage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "undefined | Battle",
      "iu": true,
      "u": [
        "undefined",
        "Battle"
      ],
      "a": false
    },
    {
      "n": "selection",
      "t": "null | UseSkillSelection | SwitchPetSelection | DoNothingSelection | SurrenderSelection",
      "iu": true,
      "u": [
        "null",
        "UseSkillSelection",
        "SwitchPetSelection",
        "DoNothingSelection",
        "SurrenderSelection"
      ],
      "a": false
    },
    {
      "n": "activePet",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "messageCallbacks",
      "t": "((message: BattleMessage) => void)",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "((message: BattleMessage) => void)"
    },
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "id",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "team",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Pet"
    }
  ],
  "BaseSkill": [
    {
      "n": "effects",
      "t": "Effect<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Effect<EffectTrigger>"
    },
    {
      "n": "Builder",
      "t": "typeof (Anonymous class)",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "id",
      "t": "baseSkillId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "category",
      "t": "Category.Physical | Category.Special | Category.Status | Category.Climax",
      "iu": true,
      "u": [
        "Category.Physical",
        "Category.Special",
        "Category.Status",
        "Category.Climax"
      ],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "power",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "accuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "AttackTargetOpinion.self | AttackTargetOpinion.opponent",
      "iu": true,
      "u": [
        "AttackTargetOpinion.self",
        "AttackTargetOpinion.opponent"
      ],
      "a": false
    },
    {
      "n": "multihit",
      "t": "number | [number, number]",
      "iu": true,
      "u": [
        "number",
        "[number, number]"
      ],
      "a": false
    },
    {
      "n": "sureHit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "ignoreShield",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "tag",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    }
  ],
  "SkillInstance": [
    {
      "n": "owner",
      "t": "null | Pet",
      "iu": true,
      "u": [
        "null",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "id",
      "t": "skillId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "category",
      "t": "Category.Physical | Category.Special | Category.Status | Category.Climax",
      "iu": true,
      "u": [
        "Category.Physical",
        "Category.Special",
        "Category.Status",
        "Category.Climax"
      ],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "power",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "accuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "AttackTargetOpinion.self | AttackTargetOpinion.opponent",
      "iu": true,
      "u": [
        "AttackTargetOpinion.self",
        "AttackTargetOpinion.opponent"
      ],
      "a": false
    },
    {
      "n": "multihit",
      "t": "number | [number, number]",
      "iu": true,
      "u": [
        "number",
        "[number, number]"
      ],
      "a": false
    },
    {
      "n": "sureHit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "ignoreShield",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "tag",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    },
    {
      "n": "effects",
      "t": "Effect<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Effect<EffectTrigger>"
    },
    {
      "n": "base",
      "t": "BaseSkill",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseId",
      "t": "baseSkillId",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "Brand": [],
  "entityId": [],
  "speciesId": [],
  "petId": [],
  "baseSkillId": [],
  "skillId": [],
  "playerId": [],
  "baseMarkId": [],
  "markId": [],
  "effectId": [],
  "effectStateId": [],
  "Id": [
    {
      "n": "type",
      "t": "petId | skillId | markId | speciesId | baseMarkId | baseSkillId | effectId",
      "iu": true,
      "u": [
        "petId",
        "skillId",
        "markId",
        "speciesId",
        "baseMarkId",
        "baseSkillId",
        "effectId"
      ],
      "a": false
    }
  ],
  "PrototypeId": [
    {
      "n": "type",
      "t": "speciesId | baseMarkId | baseSkillId | effectId",
      "iu": true,
      "u": [
        "speciesId",
        "baseMarkId",
        "baseSkillId",
        "effectId"
      ],
      "a": false
    }
  ],
  "InstanceId": [
    {
      "n": "type",
      "t": "petId | skillId | markId",
      "iu": true,
      "u": [
        "petId",
        "skillId",
        "markId"
      ],
      "a": false
    }
  ],
  "StatOutBattle": [
    {
      "n": "atk",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "def",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spa",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spd",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spe",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "hp",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "StatTypeOnBattle": [
    {
      "n": "type",
      "t": "StatTypeWithoutHp.atk | StatTypeWithoutHp.def | StatTypeWithoutHp.spa | StatTypeWithoutHp.spd | StatTypeWithoutHp.spe | StatTypeOnlyBattle.accuracy | StatTypeOnlyBattle.evasion | StatTypeOnlyBattle.critRate | StatTypeOnlyBattle.ragePerTurn",
      "iu": true,
      "u": [
        "StatTypeWithoutHp.atk",
        "StatTypeWithoutHp.def",
        "StatTypeWithoutHp.spa",
        "StatTypeWithoutHp.spd",
        "StatTypeWithoutHp.spe",
        "StatTypeOnlyBattle.accuracy",
        "StatTypeOnlyBattle.evasion",
        "StatTypeOnlyBattle.critRate",
        "StatTypeOnlyBattle.ragePerTurn"
      ],
      "a": false
    }
  ],
  "StatStage": [
    {
      "n": "atk",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "def",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spa",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spd",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spe",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "StatOnBattle": [
    {
      "n": "atk",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "def",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spa",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spd",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spe",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "accuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "evasion",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "critRate",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ragePerTurn",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "StatBuffOnBattle": [
    {
      "n": "atk",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "def",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spa",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spd",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spe",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "accuracy",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "evasion",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "critRate",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ragePerTurn",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "BuffNumber": [
    {
      "n": "0",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "1",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "length",
      "t": "2",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "toString",
      "t": "() => string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "toLocaleString",
      "t": "{ (): string, (locales: string | string[], options?: (Intl.NumberFormatOptions & Intl.DateTimeFormatOptions) | undefined) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "pop",
      "t": "() => number | undefined",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "push",
      "t": "(...items: number[]) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "concat",
      "t": "{ (...items: ConcatArray<number>[]), (...items: (number | ConcatArray<number>)[]) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "join",
      "t": "(separator?: string | undefined) => string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "reverse",
      "t": "() => number",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "() => number"
    },
    {
      "n": "shift",
      "t": "() => number | undefined",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "slice",
      "t": "(start?: number | undefined, end?: number | undefined) => number",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "(start?: number | undefined, end?: number | undefined) => number"
    },
    {
      "n": "sort",
      "t": "(compareFn?: ((a: number, b: number) => number) | undefined) => BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "splice",
      "t": "{ (start: number, deleteCount?: number | undefined), (start: number, deleteCount: number, ...items: number[]) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "unshift",
      "t": "(...items: number[]) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "indexOf",
      "t": "(searchElement: number, fromIndex?: number | undefined) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "lastIndexOf",
      "t": "(searchElement: number, fromIndex?: number | undefined) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "every",
      "t": "{ <S>(predicate: (value, index: number, array: number[]) => value is S, thisArg?: any), (predicate: (value, index: number, array: number[]) => unknown, thisArg?: any) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "some",
      "t": "(predicate: (value: number, index: number, array: number[]) => unknown, thisArg?: any) => boolean",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "forEach",
      "t": "(callbackfn: (value: number, index: number, array: number[]) => void, thisArg?: any) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "map",
      "t": "<U>(callbackfn: (value: number, index: number, array: number[]) => U, thisArg?: any) => U",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "<U>(callbackfn: (value: number, index: number, array: number[]) => U, thisArg?: any) => U"
    },
    {
      "n": "filter",
      "t": "{ <S>(predicate: (value, index: number, array: number[]) => value is S, thisArg?: any), (predicate: (value, index: number, array: number[]) => unknown, thisArg?: any) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "reduce",
      "t": "{ (callbackfn: (previousValue, currentValue: number, currentIndex: number, array: number[]) => number), (callbackfn: (previousValue, currentValue: number, currentIndex: number, array: number[]) => number, initialValue: number), <U>(callbackfn: (previousValue, currentValue: number, currentIndex: number, array: number[]) => U, initialValue: U) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "reduceRight",
      "t": "{ (callbackfn: (previousValue, currentValue: number, currentIndex: number, array: number[]) => number), (callbackfn: (previousValue, currentValue: number, currentIndex: number, array: number[]) => number, initialValue: number), <U>(callbackfn: (previousValue, currentValue: number, currentIndex: number, array: number[]) => U, initialValue: U) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "find",
      "t": "{ <S>(predicate: (value, index: number, obj: number[]) => value is S, thisArg?: any), (predicate: (value, index: number, obj: number[]) => unknown, thisArg?: any) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "findIndex",
      "t": "(predicate: (value: number, index: number, obj: number[]) => unknown, thisArg?: any) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "fill",
      "t": "(value: number, start?: number | undefined, end?: number | undefined) => BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "copyWithin",
      "t": "(target: number, start: number, end?: number | undefined) => BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "entries",
      "t": "() => ArrayIterator<[number, number]>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "keys",
      "t": "() => ArrayIterator<number>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "values",
      "t": "() => ArrayIterator<number>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "includes",
      "t": "(searchElement: number, fromIndex?: number | undefined) => boolean",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "flatMap",
      "t": "<U, This>(callback: (this: This, value: number, index: number, array: number[]) => U | readonly U[], thisArg?: This | undefined) => U",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "<U, This>(callback: (this: This, value: number, index: number, array: number[]) => U | readonly U[], thisArg?: This | undefined) => U"
    },
    {
      "n": "flat",
      "t": "<A, D>(this: A, depth?: D | undefined) => FlatArray<A, D>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "<A, D>(this: A, depth?: D | undefined) => FlatArray<A, D>"
    },
    {
      "n": "at",
      "t": "(index: number) => number | undefined",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "findLast",
      "t": "{ <S>(predicate: (value, index: number, array: number[]) => value is S, thisArg?: any), (predicate: (value, index: number, array: number[]) => unknown, thisArg?: any) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "findLastIndex",
      "t": "(predicate: (value: number, index: number, array: number[]) => unknown, thisArg?: any) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "toReversed",
      "t": "() => number",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "() => number"
    },
    {
      "n": "toSorted",
      "t": "(compareFn?: ((a: number, b: number) => number) | undefined) => number",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "(compareFn?: ((a: number, b: number) => number) | undefined) => number"
    },
    {
      "n": "toSpliced",
      "t": "{ (start: number, deleteCount: number, ...items: number[]), (start: number, deleteCount?: number | undefined) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "with",
      "t": "(index: number, value: number) => number",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "(index: number, value: number) => number"
    },
    {
      "n": "__@iterator@189",
      "t": "() => ArrayIterator<number>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "__@unscopables@777",
      "t": "Record<x: number, boolean | undefined, length?: boolean | undefined, toString?: boolean | undefined, toLocaleString?: boolean | undefined, pop?: boolean | undefined, push?: boolean | undefined, concat?: boolean | undefined, join?: boolean | undefined, reverse?: boolean | undefined, shift?: boolean | undefined, slice?: boolean | undefined, sort?: boolean | undefined, splice?: boolean | undefined, unshift?: boolean | undefined, indexOf?: boolean | undefined, lastIndexOf?: boolean | undefined, every?: boolean | undefined, some?: boolean | undefined, forEach?: boolean | undefined, map?: boolean | undefined, filter?: boolean | undefined, reduce?: boolean | undefined, reduceRight?: boolean | undefined, find?: boolean | undefined, findIndex?: boolean | undefined, fill?: boolean | undefined, copyWithin?: boolean | undefined, entries?: boolean | undefined, keys?: boolean | undefined, values?: boolean | undefined, includes?: boolean | undefined, flatMap?: boolean | undefined, flat?: boolean | undefined, at?: boolean | undefined, findLast?: boolean | undefined, findLastIndex?: boolean | undefined, toReversed?: boolean | undefined, toSorted?: boolean | undefined, toSpliced?: boolean | undefined, with?: boolean | undefined, [Symbol.iterator]?: boolean | undefined, readonly [Symbol.unscopables]?: boolean | undefined,>",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "BattleMessage": [
    {
      "n": "type",
      "t": "BattleStateMessage | BattleStartMessage | RoundStartMessage | BattleEndMessage | PetSwitchMessage | PetDefeatedMessage | PetReviveMessage | StatChangeMessage | RageChangeMessage | HpChangeMessage | SkillUseMessage | SkillMissMessage | SkillEffectMessage | DamageMessage | HealMessage | CritMessage | TypeEffectivenessMessage | MarkApplyMessage | MarkTriggerMessage | MarkExpireMessage | TurnActionMessage | ForcedSwitchMessage | FaintSwitchMessage | InvalidActionMessage | InfoMessage | ErrorMessage",
      "iu": true,
      "u": [
        "BattleStateMessage",
        "BattleStartMessage",
        "RoundStartMessage",
        "BattleEndMessage",
        "PetSwitchMessage",
        "PetDefeatedMessage",
        "PetReviveMessage",
        "StatChangeMessage",
        "RageChangeMessage",
        "HpChangeMessage",
        "SkillUseMessage",
        "SkillMissMessage",
        "SkillEffectMessage",
        "DamageMessage",
        "HealMessage",
        "CritMessage",
        "TypeEffectivenessMessage",
        "MarkApplyMessage",
        "MarkTriggerMessage",
        "MarkExpireMessage",
        "TurnActionMessage",
        "ForcedSwitchMessage",
        "FaintSwitchMessage",
        "InvalidActionMessage",
        "InfoMessage",
        "ErrorMessage"
      ],
      "a": false
    }
  ],
  "BattleStateMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.BattleState",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "BattleState",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "BattleStartMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.BattleStart",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ playerA: PlayerMessage, playerB: PlayerMessage }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "RoundStartMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.RoundStart",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "round",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "BattleEndMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.BattleEnd",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ winner: playerId | null, reason: \"all_pet_fainted\" | \"surrender\" }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PetSwitchMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.PetSwitch",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ player: playerId, fromPet: petId, toPet: petId, currentHp: number }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PetDefeatedMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.PetDefeated",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ pet: petId, killer?: petId | undefined }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PetReviveMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.PetRevive",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ pet: petId, revivedBy: petId }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "StatChangeMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.StatChange",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ pet: petId, stat: StatTypeOnBattle, stage: number, reason: string }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "RageChangeMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.RageChange",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ player: playerId, pet: petId, before: number, after: number, reason: \"turn\" | \"damage\" | \"skill\" | \"skillHit\" | \"switch\" | \"effect\" }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "HpChangeMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.HpChange",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ pet: petId, before: number, after: number, maxHp: number, reason: \"damage\" | \"heal\" | \"drain\" | \"revive\" }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "SkillUseMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.SkillUse",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ user: petId, target: AttackTargetOpinion, skill: string, rageCost: number }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "SkillMissMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.SkillMiss",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ user: petId, target: petId, skill: string, reason: \"accuracy\" | \"dodge\" | \"immune\" }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "SkillEffectMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.SkillEffect",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ user?: petId | undefined, target: petId, effect: string, description: string }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "DamageMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.Damage",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ maxHp: number, currentHp: number, source: petId | skillId | markId, target: petId, damage: number, isCrit: boolean, effectiveness: number, damageType: \"effect\" | \"physical\" | \"special\" }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "HealMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.Heal",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ target: petId, amount: number, source: \"skill\" | \"effect\" | \"item\", healer?: string | undefined }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "CritMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.Crit",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ attacker: petId, target: petId }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "TypeEffectivenessMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.TypeEffectiveness",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ attackerType: Element, defenderType: Element, multiplier: number }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "MarkApplyMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.MarkApply",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ markType: baseMarkId, applier: petId, target: petId, duration: number }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "MarkTriggerMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.MarkTrigger",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ markType: markId, trigger: petId, effect: effectId }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "MarkExpireMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.MarkExpire",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ markType: markId, target: petId }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "TurnActionMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.TurnAction",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{  }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "ForcedSwitchMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.ForcedSwitch",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "player",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "FaintSwitchMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.FaintSwitch",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "player",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "InvalidActionMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.InvalidAction",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "{ player: playerId, action: string, reason: \"no_rage\" | \"cooldown\" | \"invalid_target\" | \"dead_pet\" | \"invalid_action\" }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "InfoMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.Info",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "message",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "ErrorMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.Error",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "message",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "SkillMessage": [
    {
      "n": "id",
      "t": "skillId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseId",
      "t": "baseSkillId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "category",
      "t": "Category.Physical | Category.Special | Category.Status | Category.Climax",
      "iu": true,
      "u": [
        "Category.Physical",
        "Category.Special",
        "Category.Status",
        "Category.Climax"
      ],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "power",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "accuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "AttackTargetOpinion.self | AttackTargetOpinion.opponent",
      "iu": true,
      "u": [
        "AttackTargetOpinion.self",
        "AttackTargetOpinion.opponent"
      ],
      "a": false
    },
    {
      "n": "multihit",
      "t": "number | [number, number]",
      "iu": true,
      "u": [
        "number",
        "[number, number]"
      ],
      "a": false
    },
    {
      "n": "sureHit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "tag",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    }
  ],
  "PetMessage": [
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "id",
      "t": "petId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "speciesID",
      "t": "speciesId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "level",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "currentHp",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "maxHp",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "skills",
      "t": "undefined | SkillMessage",
      "iu": true,
      "u": [
        "undefined",
        "SkillMessage"
      ],
      "a": false
    },
    {
      "n": "stats",
      "t": "undefined | StatOnBattle",
      "iu": true,
      "u": [
        "undefined",
        "StatOnBattle"
      ],
      "a": false
    },
    {
      "n": "marks",
      "t": "MarkMessage",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "MarkMessage"
    }
  ],
  "MarkMessage": [
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "id",
      "t": "markId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseId",
      "t": "baseMarkId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stack",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "duration",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "isActive",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "PlayerMessage": [
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "id",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "activePet",
      "t": "PetMessage",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "team",
      "t": "undefined | PetMessage",
      "iu": true,
      "u": [
        "undefined",
        "PetMessage"
      ],
      "a": false
    },
    {
      "n": "teamAlives",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "BattleState": [
    {
      "n": "status",
      "t": "BattleStatus.Unstarted | BattleStatus.OnBattle | BattleStatus.Ended",
      "iu": true,
      "u": [
        "BattleStatus.Unstarted",
        "BattleStatus.OnBattle",
        "BattleStatus.Ended"
      ],
      "a": false
    },
    {
      "n": "currentPhase",
      "t": "BattlePhase.SwitchPhase | BattlePhase.SelectionPhase | BattlePhase.ExecutionPhase | BattlePhase.Ended",
      "iu": true,
      "u": [
        "BattlePhase.SwitchPhase",
        "BattlePhase.SelectionPhase",
        "BattlePhase.ExecutionPhase",
        "BattlePhase.Ended"
      ],
      "a": false
    },
    {
      "n": "currentTurn",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "marks",
      "t": "MarkMessage",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "MarkMessage"
    },
    {
      "n": "players",
      "t": "PlayerMessage",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "PlayerMessage"
    }
  ],
  "BaseBattleMessage": [
    {
      "n": "type",
      "t": "T",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "BattleMessageData[T]",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "BattleMessageData": [
    {
      "n": "[BattleMessageType.BattleState]",
      "t": "BattleState",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.BattleStart]",
      "t": "{ playerA: PlayerMessage, playerB: PlayerMessage }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.RoundStart]",
      "t": "round",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.BattleEnd]",
      "t": "{ winner: playerId | null, reason: \"all_pet_fainted\" | \"surrender\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.PetSwitch]",
      "t": "{ player: playerId, fromPet: petId, toPet: petId, currentHp: number }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.PetDefeated]",
      "t": "{ pet: petId, killer?: petId | undefined }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.PetRevive]",
      "t": "{ pet: petId, revivedBy: petId }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.StatChange]",
      "t": "{ pet: petId, stat: StatTypeOnBattle, stage: number, reason: string }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.RageChange]",
      "t": "{ player: playerId, pet: petId, before: number, after: number, reason: \"turn\" | \"damage\" | \"skill\" | \"skillHit\" | \"switch\" | \"effect\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.HpChange]",
      "t": "{ pet: petId, before: number, after: number, maxHp: number, reason: \"damage\" | \"heal\" | \"drain\" | \"revive\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.SkillUse]",
      "t": "{ user: petId, target: AttackTargetOpinion, skill: string, rageCost: number }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.SkillMiss]",
      "t": "{ user: petId, target: petId, skill: string, reason: \"accuracy\" | \"dodge\" | \"immune\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.SkillEffect]",
      "t": "{ user?: petId | undefined, target: petId, effect: string, description: string }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.Damage]",
      "t": "{ maxHp: number, currentHp: number, source: petId | skillId | markId, target: petId, damage: number, isCrit: boolean, effectiveness: number, damageType: \"effect\" | \"physical\" | \"special\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.Heal]",
      "t": "{ target: petId, amount: number, source: \"skill\" | \"effect\" | \"item\", healer?: string | undefined }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.Crit]",
      "t": "{ attacker: petId, target: petId }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.TypeEffectiveness]",
      "t": "{ attackerType: Element, defenderType: Element, multiplier: number }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.MarkApply]",
      "t": "{ markType: baseMarkId, applier: petId, target: petId, duration: number }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.MarkTrigger]",
      "t": "{ markType: markId, trigger: petId, effect: effectId }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.MarkExpire]",
      "t": "{ markType: markId, target: petId }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.TurnAction]",
      "t": "{  }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.ForcedSwitch]",
      "t": "player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.FaintSwitch]",
      "t": "player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.InvalidAction]",
      "t": "{ player: playerId, action: string, reason: \"no_rage\" | \"cooldown\" | \"invalid_target\" | \"dead_pet\" | \"invalid_action\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.Info]",
      "t": "message",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.Error]",
      "t": "message",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PlayerSelection": [
    {
      "n": "type",
      "t": "UseSkillSelection | SwitchPetSelection | DoNothingSelection | SurrenderSelection",
      "iu": true,
      "u": [
        "UseSkillSelection",
        "SwitchPetSelection",
        "DoNothingSelection",
        "SurrenderSelection"
      ],
      "a": false
    }
  ],
  "PlayerSelections": [
    {
      "n": "player",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "selections",
      "t": "PlayerSelection",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "PlayerSelection"
    }
  ],
  "UseSkillSelection": [
    {
      "n": "player",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "type",
      "t": "\"use-skill\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "skill",
      "t": "skillId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "AttackTargetOpinion.self | AttackTargetOpinion.opponent",
      "iu": true,
      "u": [
        "AttackTargetOpinion.self",
        "AttackTargetOpinion.opponent"
      ],
      "a": false
    }
  ],
  "SwitchPetSelection": [
    {
      "n": "player",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "type",
      "t": "\"switch-pet\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "pet",
      "t": "petId",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "DoNothingSelection": [
    {
      "n": "player",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "type",
      "t": "\"do-nothing\"",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "SurrenderSelection": [
    {
      "n": "player",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "type",
      "t": "\"surrender\"",
      "iu": false,
      "u": [],
      "a": false
    }
  ]
}